---
title: Shades Of Gray
description: Perceptual Gray Scales
date: 2024-11-12
tags:
 - interactive
 - ux design
 - frontend development
 - color theory
image: /interactives/shadesofgray/shadesofgray.svg
mirrors: 
 - title: Design Frühstück
   url: https://designfruehstueck.netlify.app/shadesofgray
---

{% css %}
{% include 'content/interactives/shadesofgray/styles.css' %}
{% endcss %}
<!-- partial:index.partial.html -->
<div class="container">
  <header>
    <div class="padded centered">
      <div class="title">
        <span>Perceptual Gray Scales</span>
        <h1>Shades of Grey</h1>
      </div>
    </div>
    <div class="centered visual">
      <svg
        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
        <!-- Row 1 -->
        <rect class="square-shade-100" x="0" y="0" width="170.67" height="170.67"></rect>
        <rect class="square-shade-200" x="170.67" y="0" width="170.67" height="170.67"></rect>
        <rect class="square-shade-300" x="341.34" y="0" width="170.67" height="170.67"></rect>
        <!-- Row 2 -->
        <rect class="square-shade-400" x="0" y="170.67" width="170.67" height="170.67"></rect>
        <rect class="square-shade-500" x="170.67" y="170.67" width="170.67" height="170.67"></rect>
        <rect class="square-shade-600" x="341.34" y="170.67" width="170.67" height="170.67"></rect>
        <!-- Row 3 -->
        <rect class="square-shade-700" x="0" y="341.34" width="170.67" height="170.67"></rect>
        <rect class="square-shade-800" x="170.67" y="341.34" width="170.67" height="170.67"></rect>
        <rect class="square-shade-900" x="341.34" y="341.34" width="170.67" height="170.67"></rect>
      </svg>
    </div>
  </header>
  <section>
    <div class="padded">
      <p>
        Perceptual gray scales are a method for creating shades of gray that account for the way humans perceive brightness.
        Unlike evenly divided linear scales, perceptual gray scales ensure that the shades appear visually consistent. This
        approach is based on the fact that human vision interprets brightness nonlinearly, requiring careful adjustments to
        create a balanced gradient.
      </p>
    </div>
    <div></div>
  </section>
  <section>
    <div class="visual">
      <div class="sticky screen centered">
        <div class="shade-container">
          <div class="shade shade-100">100</div>
          <div class="shade shade-200">200</div>
          <div class="shade shade-300">300</div>
          <div class="shade shade-400">400</div>
          <div class="shade shade-500">500</div>
          <div class="shade shade-600">600</div>
          <div class="shade shade-700">700</div>
          <div class="shade shade-800">800</div>
          <div class="shade shade-900">900</div>
        </div>
      </div>
    </div>
    <div class="side">
      <div class="padded description">
        <h2>Gradient</h2>
        <p>
          Human visual perception of brightness, like that of many other stimuli, is approximately logarithmic. Thus a linear
          sequence of grayscale values does not subjectively appear to occur in even steps. Using HSL (hue, saturation, lightness)
          as our color model, we can do some experiments to illustrate this.
        </p>
        <p>
          You may know these numbers from font weights. They are used to eliminate weird wording like dark, darker, darkest, but
          what is in between. So here you go, a granular percentage abstraction which you an easily add.
        </p>
      </div>
      <div class="padded">
        <h2>Day and Night</h2>
        <p>
          The current theme adjusts to your system settings by default. You can also toggle between light and dark themes
          manually.
        </p>
        <p>
          Try for yourself and see how it works compared to a linear scale!
        </p>
      </div>
      <div class="centered visual options">
        <div>
          <div>
            <h3>Perceptual</h3>
            <div>
              <button data-theme-id="dark">Dark</button>
              <button data-theme-id="light">Light</button>
            </div>
          </div>
          <div>
            <h3>Linear</h3>
            <div>
              <button data-theme-id="linear">Dark</button>
              <button data-theme-id="linear-inverted">Light</button>
            </div>
          </div>
          <div class="spacer"></div>
        </div>
      </div>
      <div class="padded">
        <h2>Lightness</h2>
        <h1>\[L = c \cdot x^k\]</h1>
        <h3>Choose value for \( k = \)
          <span id="k-value">1.13</span>
        </h3>
        <div class="slider-container" id="lightness-slider">
          <div id="lightness-k-value"></div>
          <input id="k-slider" type="range" min="0.1" max="2.5" step="0.01" value="1.13"/>
        </div>
        <div class="details">
          <p>
            We calculate the grayscale lightness values using the above power
                                                function.
          </p>
          <div>
            Where:
            <ul>
              <li>
                \( L \) is the lightness value (scaled between 0 and 100).
              </li>
              <li>
                \( c \) is a scaling constant to fit values the range [0,
                                                                100].
              </li>
              <li>\( x \) is the index of the gray swatch.</li>
              <li>
                \( k \) is the perceptual tuning exponent, adjustable via the
                                                                slider.
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div class="padded">
        <h2>Saturation</h2>
        <h1>\[S = c \cdot x^k\]</h1>
        <h3>
          Choose value for \( k = \)
          <span id="saturation-k-value">2</span>
        </h3>
        <div
          class="slider-container" id="saturation-slider">
          {# <span id="saturation-k-value"></span> #}
          <input id="saturation-k-slider" type="range" min="0" max="5" step="0.01" value="2"/>
        </div>
        <div class="details">
          <p>
            We calculate the grayscale lightness values using the above power
                                                function.
          </p>
          <div>
            Where:
            <ul>
              <li>\( S \) is the scaled saturation value.</li>
              <li>
                \( c \) is a scaling constant to fit the range [0, 100].
              </li>
              <li>
                \( x \) is the position (normalized 0-1) for the saturation
                                                                adjustment.
              </li>
              <li>
                \( k \) is the perceptual tuning exponent, adjustable via the
                                                                slider.
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div class="padded">
        <h2>Hue</h2>
        <div class="slider-container hue">
          <div id="hue-swatch">
            <span id="hue-value">0</span>
          </div>
          <input id="hue-slider" type="range" min="0" max="360" step="1" value="240"/>
        </div>
        <div class="details">
          <p>
            Self-explainatory, but usually you choose a color opposite of your primary, or in that direction.
          </p>
        </div>
      </div>
    </div>
  </section>
  <section class="editorial">
    <div class="padded">
      <h2 class="sticky">About the Concept</h2>
    </div>
    <div class="padded">
      <p>
        The science behind perceptual gray scales lies in
        <strong>psychophysics</strong>, the study of how physical stimuli relate to perception. Human vision is more sensitive
          to changes in darker tones than lighter ones, meaning a small change in intensity in a dark gray appears more
          significant than the same change in a light gray. To account for this, a process known as
        <strong>gamma correction</strong>
        adjusts intensity values, creating a perceptually even progression of brightness. Additionally, perceptual gray scales
        sometimes include a slight hue to make the grays more engaging without disrupting their neutrality.
      </p>
    </div>
  </section>
  <section>
    <div class="visual">
      <img
        class="sticky image"
        src="https://p.turbosquid.com/ts-thumb/hA/4T5eOw/nR/vintagecrtmonitor3dmodel001/jpg/1707829790/1920x1080/fit_q87/444acb14977d439a6020910245d11e187adcd7b7/vintagecrtmonitor3dmodel001.jpg"
        alt="CRT Monitor"/>
    </div>
    <div class="padded">
      <h2>Clarity</h2>
      <p>
        The concept of perceptual gray scales originates from
        <strong>color science</strong>
        and the development of display technologies. Early cathode-ray tube (CRT) screens, for example, required gamma
        correction to match the intensity of emitted light to what users perceived as consistent brightness. Artists and
        designers have long applied similar principles, understanding that balanced tones create depth and harmony. Modern user
        interface design builds on this by incorporating perceptual gray scales to reduce eye strain and maintain clarity across
        light and dark themes.
      </p>
      <p>
        Perceptual gray scales focus on
        <strong>lightness</strong>, the perceived brightness of a color, rather than luminance, which is the measurable
          intensity of light. This distinction ensures that the grays align with how humans experience them visually. By applying
          gamma correction and adjusting tonal spacing, perceptual gray scales create smoother transitions, particularly in
          gradients.
      </p>
      <p>
        One key advantage of perceptual gray scales is their ability to
                                        provide
        <strong>visual comfort</strong>. Evenly spaced shades feel harmonious and reduce jarring transitions. They also create
          opportunities for nuanced design by allowing small amounts of hue to add subtle personality while retaining a gray's
          neutrality. This approach is frequently applied in design systems, such as Material Design and Tailwind CSS, to enhance
          usability and aesthetics.
      </p>
      <p>
        Perceptual gray scales combine insights from science and design to ensure that gray tones feel balanced, comfortable,
        and visually engaging. By addressing how humans perceive lightness, they improve the quality of gradients, interfaces,
        and overall user experiences.
      </p>
    </div>
  </section>
  <section>
    <div class="padded">
      <h2>How Perceptual Gray Scales Work in HSL</h2>
    </div>
  </section>
  <section>
    <div class="padded">
      <p>
        The HSL (Hue, Saturation, Lightness) color model provides a simple yet powerful way to apply the principles of
        perceptual gray scales in CSS. In this model:
      </p>
      <ul>
        <li>
          <strong>Hue</strong>
          controls the color. For grays, this is often neutral (0) or slightly shifted (e.g., 240 for a cool
                    tone).
        </li>
        <li>
          <strong>Saturation</strong>
          affects the richness of the gray. Small values (e.g., 2%-5%) ensure the gray doesn't look
                              flat.
        </li>
        <li>
          <strong>Lightness</strong>
          determines how light or dark the gray
                                        appears.
        </li>
      </ul>
    </div>
    <div></div>
  </section>
  <section>
    <div class="padded">
      <h2>Example in CSS</h2>
      <ul>
        <li>
          Lightness values (<code>95%</code>
          to
          <code>15%</code>) are spaced nonlinearly to align with human brightness
                        perception.
        </li>
        <li>
          A small hue value (<code>240</code>, for blue) adds a cool, modern
                                                            undertone.
        </li>
        <li>
          Low saturation values (<code>2%-5%</code>) prevent the grays from feeling dull while maintaining
                        neutrality.
        </li>
      </ul>
    </div>
    <div class="code-block">
      <div class="code-snippet">
        <pre><code class="language-css">/* Variable definition */
:root {
--color-gray-100: hsl(240, 5%, 95%);
--color-gray-200: hsl(240, 5%, 85%);
--color-gray-300: hsl(240, 4%, 75%);
--color-gray-400: hsl(240, 4%, 65%);
--color-gray-500: hsl(240, 3%, 55%); /* Neutral */
--color-gray-600: hsl(240, 3%, 45%);
--color-gray-700: hsl(240, 2%, 35%);
--color-gray-800: hsl(240, 2%, 25%);
--color-gray-900: hsl(240, 1%, 15%);
}

/* Usage */
body {
background-color: var(--gray-100);
color: var(--gray-900);
}

.button {
background-color: var(--gray-500);
color: var(--gray-100);
}
</code></pre>
      </div>
    </div>
  </section>
  <section class="padded">
    <div>
      <h3>Conclusion</h3>
      <blockquote>
        By leveraging perceptual gray scales with HSL, you can create gradients and themes that feel natural, balanced, and
        comfortable for users. This method is particularly useful in modern interfaces where clarity and aesthetic appeal are
        essential.
      </blockquote>
    </div>
  </section>
  <section class="editorial">
    <div class="padded">
      <h2>Resources</h2>
      <p>
        <a href="https://chromatone.center/practice/color/hsl/">Chromatone</a>
        <br/> A playful way to explore the HSL model.
      </p>
      <p>
        <a href="https://resources.mpi-inf.mpg.de/ApparentGreyscale/Perceptual_Greyscale.pdf" target="_blank">
          Perceptual_Greyscale.pdf</a><br/> Paper about perceptual greyscale from Max Planck Institute
      </p>
      <p>
        <a href="https://www.figma.com/community/plugin/1400205745184914372/perceptual-color-adjustment" target="_blank">
          Perceptual Color Adjustment for Figma</a><br/> Create perceptual color scales much better than this page ;)
      </p>
    </div>
    <div class="padded">
      <h2>Credits</h2>
      <p>
        Interactive editorial by
        <a href="https://www.porschuetz.de" target="_blank">Tilman Porschütz</a>.<br/> November 2024
      </p>
    </div>
  </section>
</div>
{% js %}
{% include 'content/interactives/shadesofgray/script.js' %}{% endjs %}